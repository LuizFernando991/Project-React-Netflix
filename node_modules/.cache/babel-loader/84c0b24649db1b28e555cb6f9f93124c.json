{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\React.js\\\\Projeto-Netflix\\\\app\\\\src\\\\templates\\\\Home\\\\Index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getHomeList, getMovie } from '../../helpers/apiHelper';\nimport { useEffect, useState } from 'react';\nimport * as Styled from './styles';\nimport { MovieRow } from '../../components/MovieRow';\nimport { HighLightMovie } from '../../components/HighLightMovie';\nimport { Header } from '../../components/Header';\nimport { Footer } from '../../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [movieData, setMovieData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(() => {\n    const loadAll = async () => {\n      const apiData = await getHomeList();\n      setData(data => apiData);\n      let originals = apiData.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenMovie = await getMovie(chosen.id, 'tv');\n      setMovieData(d => chosenMovie);\n    };\n\n    loadAll();\n    return () => {\n      setData(data => []);\n      setMovieData(null);\n    };\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(r => true);\n      } else {\n        setBlackHeader(r => false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Styled.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      blackHeader: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), movieData && /*#__PURE__*/_jsxDEV(HighLightMovie, {\n      item: movieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Lists, {\n      children: data.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fX8EVSPFQhIVThRWceqRgqcmYMM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Programação/React.js/Projeto-Netflix/app/src/templates/Home/Index.jsx"],"names":["getHomeList","getMovie","useEffect","useState","Styled","MovieRow","HighLightMovie","Header","Footer","App","data","setData","movieData","setMovieData","blackHeader","setBlackHeader","loadAll","apiData","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenMovie","id","d","scrollListener","window","scrollY","r","addEventListener","removeEventListener","map","item","title"],"mappings":"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","sourcesContent":["import { getHomeList, getMovie } from '../../helpers/apiHelper'\nimport { useEffect, useState } from 'react'\n\nimport * as Styled from './styles'\n\nimport { MovieRow } from '../../components/MovieRow'\nimport { HighLightMovie } from '../../components/HighLightMovie'\nimport { Header } from '../../components/Header'\nimport { Footer } from '../../components/Footer'\n\nfunction App(){\n\n  const [ data, setData ] = useState([])\n  const [ movieData, setMovieData ] = useState(null)\n  const [ blackHeader, setBlackHeader ] = useState(false)\n\n  useEffect( () => {\n    \n    const loadAll = async ()=>{\n\n      const apiData = await getHomeList()\n      setData(data => apiData)\n\n      let originals = apiData.filter((i)=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenMovie = await getMovie(chosen.id, 'tv')\n\n      setMovieData(d => chosenMovie)\n      \n    }\n\n    loadAll()\n\n    return ()=> {\n      setData(data => [])\n      setMovieData(null)\n    }\n    \n  }, []);\n  \n  useEffect(()=>{\n    const scrollListener = ()=>{\n      if(window.scrollY > 10){\n        setBlackHeader(r => true)\n      }else{\n        setBlackHeader(r => false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n\n    return ()=>{\n      window.removeEventListener('scroll', scrollListener)\n    }\n  })\n\n  return(\n\n    <Styled.Container>\n      <Header blackHeader={ blackHeader }/>\n      { movieData &&\n        <HighLightMovie item={movieData}/>\n      }\n      <Styled.Lists>\n        {\n          data.map((item, i)=>{\n            return(\n              <MovieRow key={i} title={item.title} items={item.items}/>\n          )})\n        }\n      </Styled.Lists>\n      <Footer/>\n    </Styled.Container>\n\n\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}