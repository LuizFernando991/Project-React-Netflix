{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\React.js\\\\Projeto-Netflix\\\\app\\\\src\\\\components\\\\Header\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Styled from './styles';\nimport LogoNetflix from '../../Images/logonetflix.png';\nimport LogoUser from '../../Images/avatarnetflix.png';\nimport { Menu } from '../Menu';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n\n  const [blackHeader, setBlackHeader] = useState(false);\n  const [isActivated, setIsActivated] = useState(false);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(r => true);\n      } else {\n        setBlackHeader(r => false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Header, {\n      backgroundActivate: blackHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Styled.LogoImage, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LogoNetflix,\n            alt: \"Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Styled.LogoUser, {\n          onClick: () => {\n            setIsActivated(!isActivated);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: LogoUser,\n            alt: \"Conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"UserName \\u25BF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      isActivated: (setIsActivated, isActivated)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"9SQQUFFMYfCG0DwfD+4b9dlgbts=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["E:/Programação/React.js/Projeto-Netflix/app/src/components/Header/index.jsx"],"names":["Styled","LogoNetflix","LogoUser","Menu","useState","useEffect","Header","blackHeader","setBlackHeader","isActivated","setIsActivated","scrollListener","window","scrollY","r","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEtB,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAEK,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,cAAc,GAAG,MAAI;AACzB,UAAGC,MAAM,CAACC,OAAP,GAAiB,EAApB,EAAuB;AACrBL,QAAAA,cAAc,CAACM,CAAC,IAAI,IAAN,CAAd;AACD,OAFD,MAEK;AACHN,QAAAA,cAAc,CAACM,CAAC,IAAI,KAAN,CAAd;AACD;AACF,KAND;;AAQAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,cAAlC;AAEA,WAAO,MAAI;AACTC,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,cAArC;AACD,KAFD;AAGD,GAdM,CAAT;AAiBA,sBACI;AAAA,4BACA,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,kBAAkB,EAAKJ,WAAtC;AAAA,8BACI;AAAA,+BACI,QAAC,MAAD,CAAQ,SAAR;AAAkB,UAAA,IAAI,EAAC,GAAvB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEN,WAAV;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BACI,QAAC,MAAD,CAAQ,QAAR;AAAiB,UAAA,OAAO,EAAE,MAAI;AAACS,YAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA6B,WAA5D;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEP,QAAV;AAAoB,YAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAcA,QAAC,IAAD;AAAM,MAAA,WAAW,GAAIQ,cAAc,EAAED,WAApB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA,kBADJ;AAkBH,CAxCM;;GAAMH,M;;KAAAA,M","sourcesContent":["import * as Styled from './styles'\r\nimport LogoNetflix from '../../Images/logonetflix.png'\r\nimport LogoUser from '../../Images/avatarnetflix.png'\r\nimport { Menu } from '../Menu'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nexport const Header = ()=>{\r\n\r\n    const [ blackHeader, setBlackHeader ] = useState(false)\r\n    const [ isActivated, setIsActivated ] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        const scrollListener = ()=>{\r\n          if(window.scrollY > 10){\r\n            setBlackHeader(r => true)\r\n          }else{\r\n            setBlackHeader(r => false)\r\n          }\r\n        }\r\n    \r\n        window.addEventListener('scroll', scrollListener)\r\n    \r\n        return ()=>{\r\n          window.removeEventListener('scroll', scrollListener)\r\n        }\r\n      })\r\n\r\n\r\n    return(\r\n        < >\r\n        <Styled.Header backgroundActivate = { blackHeader }>\r\n            <div>\r\n                <Styled.LogoImage href=\"/\">\r\n                    <img src={LogoNetflix} alt=\"Netflix\" />\r\n                </Styled.LogoImage>\r\n            </div>\r\n            <div>\r\n                <Styled.LogoUser onClick={()=>{setIsActivated(!isActivated)}}>\r\n                    <img src={LogoUser} alt=\"Conta\" /> \r\n                    <p>UserName ▿</p>\r\n                </Styled.LogoUser>\r\n            </div>\r\n        </Styled.Header>\r\n        <Menu isActivated= { setIsActivated, isActivated }/>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}