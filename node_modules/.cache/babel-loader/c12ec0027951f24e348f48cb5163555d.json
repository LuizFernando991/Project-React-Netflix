{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\React.js\\\\Projeto-Netflix\\\\app\\\\src\\\\components\\\\MovieRow\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Styled from './styles';\nimport { MoivieCard } from '../MovieCard';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieRow = _ref => {\n  _s();\n\n  let {\n    title,\n    items\n  } = _ref;\n  const [buttonReveal, setButtonReveal] = useState(false);\n  const [scrollX, setScrollX] = useState(0);\n  const buttonsDiv = useRef(null);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n\n    if (x > 0) {\n      x = 0;\n    }\n\n    setScrollX(x);\n  };\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let list = items.results.length * 150;\n\n    if (window.innerWidth - list > x) {\n      x = window.innerWidth - list - 60;\n    }\n\n    setScrollX(x);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styled.Row, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Styled.MoveRowLeft, {\n      onClick: handleLeftArrow,\n      buttonReveal: buttonReveal,\n      children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {\n        style: {\n          fontSize: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Styled.MoveRowRight, {\n      onClick: handleRightArrow,\n      buttonReveal: buttonReveal,\n      children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n        style: {\n          fontSize: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Styled.ListArea, {\n      ref: buttonsDiv.current,\n      onMouseLeave: () => setButtonReveal(false),\n      onMouseEnter: () => setButtonReveal(true),\n      children: /*#__PURE__*/_jsxDEV(Styled.List, {\n        style: {\n          marginLeft: scrollX,\n          width: items.results.length * 150\n        },\n        children: items.results.length > 0 && items.results.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(MoivieCard, {\n            item: item\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieRow, \"R2g1CW4y97QoXeGXxcTTjTpeuDg=\");\n\n_c = MovieRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"sources":["E:/Programação/React.js/Projeto-Netflix/app/src/components/MovieRow/index.jsx"],"names":["Styled","MoivieCard","NavigateBeforeIcon","NavigateNextIcon","useRef","useState","MovieRow","title","items","buttonReveal","setButtonReveal","scrollX","setScrollX","buttonsDiv","handleLeftArrow","x","Math","round","window","innerWidth","handleRightArrow","list","results","length","fontSize","current","marginLeft","width","map","item","key"],"mappings":"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","sourcesContent":["import * as Styled from './styles'\r\nimport { MoivieCard } from '../MovieCard'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\nimport { useRef, useState} from 'react'\r\n\r\nexport const MovieRow = ({  title, items }) =>{\r\n\r\n    const [ buttonReveal, setButtonReveal] = useState(false)\r\n    const [ scrollX, setScrollX] = useState(0)\r\n    const buttonsDiv = useRef(null)\r\n\r\n\r\n    const handleLeftArrow = ()=>{\r\n\r\n        let x = scrollX + Math.round(window.innerWidth/2)\r\n\r\n        if(x > 0){\r\n            x=0\r\n        }\r\n\r\n        setScrollX(x)\r\n\r\n    }\r\n\r\n    const handleRightArrow = ()=>{\r\n        let x = scrollX - Math.round(window.innerWidth/2)\r\n\r\n        let list = items.results.length * 150\r\n\r\n        if((window.innerWidth - list)> x){\r\n            x = (window.innerWidth - list) - 60\r\n        }\r\n\r\n        setScrollX(x)\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Styled.Row>\r\n            <h2>{title}</h2>\r\n\r\n\r\n                <Styled.MoveRowLeft onClick={handleLeftArrow} buttonReveal={buttonReveal}>\r\n                    <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n                </Styled.MoveRowLeft>\r\n                <Styled.MoveRowRight onClick={handleRightArrow} buttonReveal={buttonReveal}>\r\n                    <NavigateNextIcon style={{fontSize: 50}}/>\r\n                </Styled.MoveRowRight>\r\n\r\n\r\n            <Styled.ListArea ref={buttonsDiv.current} onMouseLeave={()=>setButtonReveal(false)} onMouseEnter={()=>setButtonReveal(true)}>\r\n                <Styled.List style={{ marginLeft: scrollX, width: items.results.length * 150 }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>{\r\n                        return (\r\n                            <MoivieCard key={key} item = {item}/>\r\n                        )\r\n                    })}\r\n                </Styled.List>\r\n            </Styled.ListArea>\r\n        </Styled.Row>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}