{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\React.js\\\\Projeto-Netflix\\\\app\\\\src\\\\templates\\\\Home\\\\Index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getHomeList } from '../../helpers/apiHelper';\nimport { useEffect, useState } from 'react';\nimport * as Styled from './styles';\nimport { MovieRow } from '../../components/MovieRow';\nimport { HighLightMovie } from '../../components/HighLightMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [movieData, setMovieData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      const apiData = await getHomeList();\n      setData(data => apiData);\n      let originals = apiData.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      console.log(chosen);\n      setMovieData(chosen);\n    };\n\n    loadAll();\n    return () => {\n      setData(data => []);\n      setMovieData(null);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Styled.Container, {\n    children: [movieData && /*#__PURE__*/_jsxDEV(HighLightMovie, {\n      item: movieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Lists, {\n      children: data.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OF3zIrCdb7dlJPXlj2M6VbhHOyg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Programação/React.js/Projeto-Netflix/app/src/templates/Home/Index.jsx"],"names":["getHomeList","useEffect","useState","Styled","MovieRow","HighLightMovie","App","data","setData","movieData","setMovieData","loadAll","apiData","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","console","log","map","item","title"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AAEZ,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAEf,UAAMU,OAAO,GAAG,YAAU;AAExB,YAAMC,OAAO,GAAG,MAAMZ,WAAW,EAAjC;AACAQ,MAAAA,OAAO,CAACD,IAAI,IAAIK,OAAT,CAAP;AAEA,UAAIC,SAAS,GAAGD,OAAO,CAACE,MAAR,CAAgBC,CAAD,IAAKA,CAAC,CAACC,IAAF,KAAW,WAA/B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAd,MAAAA,YAAY,CAACc,MAAD,CAAZ;AAED,KAZD;;AAcAb,IAAAA,OAAO;AAEP,WAAO,MAAK;AACVH,MAAAA,OAAO,CAACD,IAAI,IAAI,EAAT,CAAP;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAHD;AAKD,GAvBQ,EAuBN,EAvBM,CAAT;AA2BA,sBAEE,QAAC,MAAD,CAAQ,SAAR;AAAA,eAEID,SAAS,iBACT,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKE,QAAC,MAAD,CAAQ,KAAR;AAAA,gBAEIF,IAAI,CAACoB,GAAL,CAAS,CAACC,IAAD,EAAOb,CAAP,KAAW;AAClB,4BACE,QAAC,QAAD;AAAkB,UAAA,KAAK,EAAEa,IAAI,CAACC,KAA9B;AAAqC,UAAA,KAAK,EAAED,IAAI,CAACP;AAAjD,WAAeN,CAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAEA,OAHF;AAFJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD;;GApDQT,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { getHomeList } from '../../helpers/apiHelper'\nimport { useEffect, useState } from 'react'\n\nimport * as Styled from './styles'\n\nimport { MovieRow } from '../../components/MovieRow'\nimport { HighLightMovie } from '../../components/HighLightMovie'\n\nfunction App(){\n\n  const [ data, setData ] = useState([])\n  const [ movieData, setMovieData ] = useState(null)\n\n  useEffect( () => {\n    \n    const loadAll = async ()=>{\n\n      const apiData = await getHomeList()\n      setData(data => apiData)\n\n      let originals = apiData.filter((i)=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n\n      console.log(chosen)\n      setMovieData(chosen)\n      \n    }\n\n    loadAll()\n\n    return ()=> {\n      setData(data => [])\n      setMovieData(null)\n    }\n    \n  }, []);\n  \n\n\n  return(\n\n    <Styled.Container>\n\n      { movieData &&\n        <HighLightMovie item={movieData}/>\n      }\n      <Styled.Lists>\n        {\n          data.map((item, i)=>{\n            return(\n              <MovieRow key={i} title={item.title} items={item.items}/>\n          )})\n        }\n      </Styled.Lists>\n    </Styled.Container>\n\n\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}