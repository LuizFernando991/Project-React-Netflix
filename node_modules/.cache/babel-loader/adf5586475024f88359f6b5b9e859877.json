{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\React.js\\\\Projeto-Netflix\\\\app\\\\src\\\\templates\\\\Home\\\\Index.jsx\",\n    _s = $RefreshSig$();\n\nimport { getHomeList, getMovie } from '../../helpers/apiHelper';\nimport { useEffect, useState, useRef } from 'react';\nimport * as Styled from './styles';\nimport { MovieRow } from '../../components/MovieRow';\nimport { HighLightMovie } from '../../components/HighLightMovie';\nimport { Header } from '../../components/Header';\nimport { Footer } from '../../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [movieData, setMovieData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const overviewRef = useRef(null);\n  console.log(overviewRef.current);\n  useEffect(() => {\n    const loadAll = async () => {\n      const apiData = await getHomeList();\n      setData(data => apiData);\n      let originals = apiData.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenMovie = await getMovie(chosen.id, 'tv');\n      setMovieData(d => chosenMovie);\n    };\n\n    loadAll();\n    return () => {\n      setData(data => []);\n      setMovieData(null);\n    };\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(r => true);\n      } else {\n        setBlackHeader(r => false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  });\n  useEffect(() => {\n    const handleOutClick = event => {\n      if (!overviewRef.current.contains(event.target)) {\n        setIsOpen(false);\n        console.log('fora');\n      }\n    };\n\n    document.addEventListener('mousedown', handleOutClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOutClick);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        blackHeader: blackHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), movieData && /*#__PURE__*/_jsxDEV(HighLightMovie, {\n        item: movieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Styled.Lists, {\n        children: data.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(MovieRow, {\n            title: item.title,\n            items: item.items\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.OverView, {\n      ref: overviewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Z7HrP1R0EVSeLmgMqiM+eJi+5LE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Programação/React.js/Projeto-Netflix/app/src/templates/Home/Index.jsx"],"names":["getHomeList","getMovie","useEffect","useState","useRef","Styled","MovieRow","HighLightMovie","Header","Footer","App","data","setData","movieData","setMovieData","blackHeader","setBlackHeader","isOpen","setIsOpen","overviewRef","console","log","current","loadAll","apiData","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenMovie","id","d","scrollListener","window","scrollY","r","addEventListener","removeEventListener","handleOutClick","event","contains","target","document","map","item","title"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,yBAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,MAAT,QAAuB,yBAAvB;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AAEZ,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEU,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAEY,WAAF,EAAeC,cAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAEc,MAAF,EAAUC,SAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMgB,WAAW,GAAGf,MAAM,CAAC,IAAD,CAA1B;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,OAAxB;AAGApB,EAAAA,SAAS,CAAE,MAAM;AAEf,UAAMqB,OAAO,GAAG,YAAU;AAExB,YAAMC,OAAO,GAAG,MAAMxB,WAAW,EAAjC;AACAY,MAAAA,OAAO,CAACD,IAAI,IAAIa,OAAT,CAAP;AAEA,UAAIC,SAAS,GAAGD,OAAO,CAACE,MAAR,CAAgBC,CAAD,IAAKA,CAAC,CAACC,IAAF,KAAW,WAA/B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,WAAW,GAAG,MAAMpC,QAAQ,CAACmC,MAAM,CAACE,EAAR,EAAY,IAAZ,CAAhC;AAEAxB,MAAAA,YAAY,CAACyB,CAAC,IAAIF,WAAN,CAAZ;AAED,KAZD;;AAcAd,IAAAA,OAAO;AAEP,WAAO,MAAK;AACVX,MAAAA,OAAO,CAACD,IAAI,IAAI,EAAT,CAAP;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAHD;AAKD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBAZ,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMsC,cAAc,GAAG,MAAI;AACzB,UAAGC,MAAM,CAACC,OAAP,GAAiB,EAApB,EAAuB;AACrB1B,QAAAA,cAAc,CAAC2B,CAAC,IAAI,IAAN,CAAd;AACD,OAFD,MAEK;AACH3B,QAAAA,cAAc,CAAC2B,CAAC,IAAI,KAAN,CAAd;AACD;AACF,KAND;;AAQAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,cAAlC;AAEA,WAAO,MAAI;AACTC,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,cAArC;AACD,KAFD;AAGD,GAdQ,CAAT;AAkBAtC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,cAAc,GAAIC,KAAD,IAAS;AAC9B,UAAG,CAAC5B,WAAW,CAACG,OAAZ,CAAoB0B,QAApB,CAA6BD,KAAK,CAACE,MAAnC,CAAJ,EAA+C;AAC7C/B,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AAAC,KAJF;;AAMA6B,IAAAA,QAAQ,CAACN,gBAAT,CAA0B,WAA1B,EAAuCE,cAAvC;AAEA,WAAO,MAAI;AACTI,MAAAA,QAAQ,CAACL,mBAAT,CAA6B,WAA7B,EAA0CC,cAA1C;AACD,KAFD;AAGD,GAZQ,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD,CAAQ,SAAR;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAG/B;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGIF,SAAS,iBACT,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME,QAAC,MAAD,CAAQ,KAAR;AAAA,kBAEIF,IAAI,CAACwC,GAAL,CAAS,CAACC,IAAD,EAAOzB,CAAP,KAAW;AAClB,8BACE,QAAC,QAAD;AAAkB,YAAA,KAAK,EAAEyB,IAAI,CAACC,KAA9B;AAAqC,YAAA,KAAK,EAAED,IAAI,CAACnB;AAAjD,aAAeN,CAAf;AAAA;AAAA;AAAA;AAAA,kBADF;AAEA,SAHF;AAFJ;AAAA;AAAA;AAAA;AAAA,cANF,eAcE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,GAAG,EAAER;AAAtB;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AA0BD;;GA/FQT,G;;KAAAA,G;AAkGT,eAAeA,GAAf","sourcesContent":["import { getHomeList, getMovie } from '../../helpers/apiHelper'\nimport { useEffect, useState, useRef } from 'react'\n\nimport * as Styled from './styles'\n\nimport { MovieRow } from '../../components/MovieRow'\nimport { HighLightMovie } from '../../components/HighLightMovie'\nimport { Header } from '../../components/Header'\nimport { Footer } from '../../components/Footer'\n\nfunction App(){\n\n  const [ data, setData ] = useState([])\n  const [ movieData, setMovieData ] = useState(null)\n  const [ blackHeader, setBlackHeader ] = useState(false)\n  const [ isOpen, setIsOpen ] = useState(false)\n\n  const overviewRef = useRef(null)\n\n  console.log(overviewRef.current)\n\n\n  useEffect( () => {\n    \n    const loadAll = async ()=>{\n\n      const apiData = await getHomeList()\n      setData(data => apiData)\n\n      let originals = apiData.filter((i)=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenMovie = await getMovie(chosen.id, 'tv')\n\n      setMovieData(d => chosenMovie)\n      \n    }\n\n    loadAll()\n\n    return ()=> {\n      setData(data => [])\n      setMovieData(null)\n    }\n    \n  }, []);\n  \n  useEffect(()=>{\n    const scrollListener = ()=>{\n      if(window.scrollY > 10){\n        setBlackHeader(r => true)\n      }else{\n        setBlackHeader(r => false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n\n    return ()=>{\n      window.removeEventListener('scroll', scrollListener)\n    }\n  })\n\n \n\n  useEffect(() => {\n    const handleOutClick = (event)=>{\n      if(!overviewRef.current.contains(event.target)){\n        setIsOpen(false)\n        console.log('fora')\n    }}\n\n    document.addEventListener('mousedown', handleOutClick)\n\n    return ()=>{\n      document.removeEventListener('mousedown', handleOutClick)\n    }\n  });\n\n  return(\n    <>\n      <Styled.Container>\n        \n        <Header blackHeader={ blackHeader }/>\n        { movieData &&\n          <HighLightMovie item={movieData}/>\n        }\n        <Styled.Lists>\n          {\n            data.map((item, i)=>{\n              return(\n                <MovieRow key={i} title={item.title} items={item.items}/>\n            )})\n          }\n        </Styled.Lists>\n        <Footer/>\n        \n        \n      </Styled.Container>\n      \n      <Styled.OverView ref={overviewRef} />\n      \n  </>\n  )\n\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}